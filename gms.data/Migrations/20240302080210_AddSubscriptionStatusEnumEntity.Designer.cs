// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gms.data;

#nullable disable

namespace gms.data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240302080210_AddSubscriptionStatusEnumEntity")]
    partial class AddSubscriptionStatusEnumEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("gms.data.Models.SubscriptionStatusEnumEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubscriptionStatus")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("gms.SubscriptionStatusEnum", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 3, 2, 8, 2, 9, 910, DateTimeKind.Utc).AddTicks(150),
                            IsDeleted = false,
                            SubscriptionStatus = "Active"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 3, 2, 8, 2, 9, 910, DateTimeKind.Utc).AddTicks(159),
                            IsDeleted = false,
                            SubscriptionStatus = "Suspend"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 3, 2, 8, 2, 9, 910, DateTimeKind.Utc).AddTicks(161),
                            IsDeleted = false,
                            SubscriptionStatus = "Cancelled"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 3, 2, 8, 2, 9, 910, DateTimeKind.Utc).AddTicks(163),
                            IsDeleted = false,
                            SubscriptionStatus = "Expired"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
