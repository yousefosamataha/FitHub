// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gms.data;

#nullable disable

namespace gms.data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240304015125_addPlanEntity")]
    partial class addPlanEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("gms.data.Models.PaymentMethodEnumEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("gms.PaymentMethodEnum", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 3, 4, 1, 51, 24, 531, DateTimeKind.Utc).AddTicks(5316),
                            IsDeleted = false,
                            PaymentMethod = "Cash"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 3, 4, 1, 51, 24, 531, DateTimeKind.Utc).AddTicks(5325),
                            IsDeleted = false,
                            PaymentMethod = "Credit"
                        });
                });

            modelBuilder.Entity("gms.data.Models.PlanEntity", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("MaxBranchNumber")
                        .HasColumnType("int");

                    b.Property<int>("MaxMemberNumberPerBranch")
                        .HasColumnType("int");

                    b.Property<int>("MaxStaffNumberPerBranch")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PricePerMonth")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PricePerYear")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("ReminderDays")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("gms.SystemPlan", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 3, 4, 1, 51, 24, 532, DateTimeKind.Utc).AddTicks(3248),
                            IsDeleted = false,
                            MaxBranchNumber = 1,
                            MaxMemberNumberPerBranch = 50,
                            MaxStaffNumberPerBranch = 20,
                            PlanName = "free_trial",
                            PricePerMonth = 0m,
                            PricePerYear = 0m,
                            ReminderDays = 0
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 3, 4, 1, 51, 24, 532, DateTimeKind.Utc).AddTicks(3256),
                            IsDeleted = false,
                            MaxBranchNumber = 3,
                            MaxMemberNumberPerBranch = 100,
                            MaxStaffNumberPerBranch = 30,
                            PlanName = "startup",
                            PricePerMonth = 500m,
                            PricePerYear = 5000m,
                            ReminderDays = 10
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2024, 3, 4, 1, 51, 24, 532, DateTimeKind.Utc).AddTicks(3259),
                            IsDeleted = false,
                            MaxBranchNumber = 5,
                            MaxMemberNumberPerBranch = 200,
                            MaxStaffNumberPerBranch = 40,
                            PlanName = "business",
                            PricePerMonth = 1000m,
                            PricePerYear = 10000m,
                            ReminderDays = 10
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2024, 3, 4, 1, 51, 24, 532, DateTimeKind.Utc).AddTicks(3262),
                            IsDeleted = false,
                            MaxBranchNumber = 10,
                            MaxMemberNumberPerBranch = 400,
                            MaxStaffNumberPerBranch = 50,
                            PlanName = "enterprise",
                            PricePerMonth = 2000m,
                            PricePerYear = 20000m,
                            ReminderDays = 10
                        });
                });

            modelBuilder.Entity("gms.data.Models.SubscriptionStatusEnumEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<byte>("BadgeColorId")
                        .HasColumnType("tinyint");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubscriptionStatus")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("gms.SubscriptionStatusEnum", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BadgeColorId = (byte)2,
                            CreatedAt = new DateTime(2024, 3, 4, 1, 51, 24, 531, DateTimeKind.Utc).AddTicks(7853),
                            IsDeleted = false,
                            SubscriptionStatus = "Active"
                        },
                        new
                        {
                            Id = 2,
                            BadgeColorId = (byte)4,
                            CreatedAt = new DateTime(2024, 3, 4, 1, 51, 24, 531, DateTimeKind.Utc).AddTicks(7861),
                            IsDeleted = false,
                            SubscriptionStatus = "Suspend"
                        },
                        new
                        {
                            Id = 3,
                            BadgeColorId = (byte)6,
                            CreatedAt = new DateTime(2024, 3, 4, 1, 51, 24, 531, DateTimeKind.Utc).AddTicks(7864),
                            IsDeleted = false,
                            SubscriptionStatus = "Cancelled"
                        },
                        new
                        {
                            Id = 4,
                            BadgeColorId = (byte)3,
                            CreatedAt = new DateTime(2024, 3, 4, 1, 51, 24, 531, DateTimeKind.Utc).AddTicks(7867),
                            IsDeleted = false,
                            SubscriptionStatus = "Expired"
                        });
                });

            modelBuilder.Entity("gms.data.Models.SubscriptionTypeEnumEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("SubscriptionType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("gms.SubscriptionTypeEnum", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 3, 4, 1, 51, 24, 532, DateTimeKind.Utc).AddTicks(464),
                            IsDeleted = false,
                            SubscriptionType = "Monthly"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 3, 4, 1, 51, 24, 532, DateTimeKind.Utc).AddTicks(471),
                            IsDeleted = false,
                            SubscriptionType = "Annually"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
