// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using gms.entityframeworkcore.Data;

#nullable disable

namespace gms.data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240126210058_AddGymGroupEntity")]
    partial class AddGymGroupEntity
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("gms.data.Models.CategoryEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id");

                    b.ToTable("gms.category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("bf2b3035-002b-448d-a58b-57eedfe33753"),
                            CreatedAt = new DateTime(2024, 1, 26, 23, 0, 58, 302, DateTimeKind.Local).AddTicks(337),
                            IsDeleted = false,
                            Name = "Regular"
                        },
                        new
                        {
                            Id = new Guid("147685ef-4a69-437a-a094-0872db3deb2c"),
                            CreatedAt = new DateTime(2024, 1, 26, 23, 0, 58, 302, DateTimeKind.Local).AddTicks(407),
                            IsDeleted = false,
                            Name = "Limited"
                        },
                        new
                        {
                            Id = new Guid("aba5f6d7-cccd-48ba-8383-98563a5cf1d5"),
                            CreatedAt = new DateTime(2024, 1, 26, 23, 0, 58, 302, DateTimeKind.Local).AddTicks(411),
                            IsDeleted = false,
                            Name = "Total Gym Exercises for Abs (Abdomininals)"
                        },
                        new
                        {
                            Id = new Guid("53ba090c-bf88-4670-b798-068155c685e5"),
                            CreatedAt = new DateTime(2024, 1, 26, 23, 0, 58, 302, DateTimeKind.Local).AddTicks(414),
                            IsDeleted = false,
                            Name = "Total Gym Exercises for Legs"
                        },
                        new
                        {
                            Id = new Guid("fa6ecd08-5b12-43e1-953e-1a80cfb1b9d3"),
                            CreatedAt = new DateTime(2024, 1, 26, 23, 0, 58, 302, DateTimeKind.Local).AddTicks(439),
                            IsDeleted = false,
                            Name = "Total Gym Exercises for Biceps"
                        },
                        new
                        {
                            Id = new Guid("fa917e0f-c660-4d35-b1e8-e0ec1a03033d"),
                            CreatedAt = new DateTime(2024, 1, 26, 23, 0, 58, 302, DateTimeKind.Local).AddTicks(447),
                            IsDeleted = false,
                            Name = "Exercise"
                        });
                });

            modelBuilder.Entity("gms.data.Models.GymEventPlaceEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Place")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("gms.gym_event_place", (string)null);
                });

            modelBuilder.Entity("gms.data.Models.GymGroupEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("gms.gym_group", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
